// Code generated by go-swagger; DO NOT EDIT.

package datasource

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"terraform-provider-logicmonitor/common"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"terraform-provider-logicmonitor/models"
)

// NewAddDatasourceByIDParams creates a new AddDatasourceByIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddDatasourceByIDParams() *AddDatasourceByIDParams {
	return &AddDatasourceByIDParams{
		timeout: common.DefaultTimeout,
	}
}

// NewAddDatasourceByIDParamsWithTimeout creates a new AddDatasourceByIDParams object
// with the ability to set a timeout on a request.
func NewAddDatasourceByIDParamsWithTimeout(timeout time.Duration) *AddDatasourceByIDParams {
	return &AddDatasourceByIDParams{
		timeout: timeout,
	}
}

// NewAddDatasourceByIDParamsWithContext creates a new AddDatasourceByIDParams object
// with the ability to set a context for a request.
func NewAddDatasourceByIDParamsWithContext(ctx context.Context) *AddDatasourceByIDParams {
	return &AddDatasourceByIDParams{
		Context: ctx,
	}
}

// NewAddDatasourceByIDParamsWithHTTPClient creates a new AddDatasourceByIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddDatasourceByIDParamsWithHTTPClient(client *http.Client) *AddDatasourceByIDParams {
	return &AddDatasourceByIDParams{
		HTTPClient: client,
	}
}

/*
AddDatasourceByIDParams contains all the parameters to send to the API endpoint

	for the add datasource by Id operation.

	Typically these are written to a http.Request.
*/
type AddDatasourceByIDParams struct {

	// Body.
	Body *models.Datasource

	// CreateGraph.
	CreateGraph *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the add datasource by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddDatasourceByIDParams) WithDefaults() *AddDatasourceByIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the add datasource by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddDatasourceByIDParams) SetDefaults() {
	var (
		createGraphDefault = bool(false)
	)

	val := AddDatasourceByIDParams{
		CreateGraph: &createGraphDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the add datasource by Id params
func (o *AddDatasourceByIDParams) WithTimeout(timeout time.Duration) *AddDatasourceByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add datasource by Id params
func (o *AddDatasourceByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add datasource by Id params
func (o *AddDatasourceByIDParams) WithContext(ctx context.Context) *AddDatasourceByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add datasource by Id params
func (o *AddDatasourceByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add datasource by Id params
func (o *AddDatasourceByIDParams) WithHTTPClient(client *http.Client) *AddDatasourceByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add datasource by Id params
func (o *AddDatasourceByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the add datasource by Id params
func (o *AddDatasourceByIDParams) WithBody(body *models.Datasource) *AddDatasourceByIDParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the add datasource by Id params
func (o *AddDatasourceByIDParams) SetBody(body *models.Datasource) {
	o.Body = body
}

// WithCreateGraph adds the createGraph to the add datasource by Id params
func (o *AddDatasourceByIDParams) WithCreateGraph(createGraph *bool) *AddDatasourceByIDParams {
	o.SetCreateGraph(createGraph)
	return o
}

// SetCreateGraph adds the createGraph to the add datasource by Id params
func (o *AddDatasourceByIDParams) SetCreateGraph(createGraph *bool) {
	o.CreateGraph = createGraph
}

// WriteToRequest writes these params to a swagger request
func (o *AddDatasourceByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	if o.CreateGraph != nil {

		// query param createGraph
		var qrCreateGraph bool

		if o.CreateGraph != nil {
			qrCreateGraph = *o.CreateGraph
		}
		qCreateGraph := swag.FormatBool(qrCreateGraph)
		if qCreateGraph != "" {

			if err := r.SetQueryParam("createGraph", qCreateGraph); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
