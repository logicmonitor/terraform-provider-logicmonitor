// Code generated by go-swagger; DO NOT EDIT.

package website

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-logicmonitor/models"
)

// PatchWebsiteByIDReader is a Reader for the PatchWebsiteByID structure.
type PatchWebsiteByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchWebsiteByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchWebsiteByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPatchWebsiteByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchWebsiteByIDOK creates a PatchWebsiteByIDOK with default headers values
func NewPatchWebsiteByIDOK() *PatchWebsiteByIDOK {
	return &PatchWebsiteByIDOK{}
}

/*
PatchWebsiteByIDOK describes a response with status code 200, with default header values.

successful operation
*/
type PatchWebsiteByIDOK struct {
	Payload *models.Website
}

func (o *PatchWebsiteByIDOK) Error() string {
	return fmt.Sprintf("[PATCH /website/websites/{id}][%d] patchWebsiteByIdOK  %+v", 200, o.Payload)
}
func (o *PatchWebsiteByIDOK) GetPayload() *models.Website {
	return o.Payload
}

func (o *PatchWebsiteByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Website)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchWebsiteByIDDefault creates a PatchWebsiteByIDDefault with default headers values
func NewPatchWebsiteByIDDefault(code int) *PatchWebsiteByIDDefault {
	return &PatchWebsiteByIDDefault{
		_statusCode: code,
	}
}

/*
PatchWebsiteByIDDefault describes a response with status code -1, with default header values.

Error
*/
type PatchWebsiteByIDDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the patch website by Id default response
func (o *PatchWebsiteByIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchWebsiteByIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /website/websites/{id}][%d] patchWebsiteById default  %+v", o._statusCode, o.Payload)
}
func (o *PatchWebsiteByIDDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchWebsiteByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
