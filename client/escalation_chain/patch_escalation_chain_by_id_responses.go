// Code generated by go-swagger; DO NOT EDIT.

package escalation_chain

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"terraform-provider-logicmonitor/models"
)

// PatchEscalationChainByIDReader is a Reader for the PatchEscalationChainByID structure.
type PatchEscalationChainByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchEscalationChainByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPatchEscalationChainByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewPatchEscalationChainByIDDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewPatchEscalationChainByIDOK creates a PatchEscalationChainByIDOK with default headers values
func NewPatchEscalationChainByIDOK() *PatchEscalationChainByIDOK {
	return &PatchEscalationChainByIDOK{}
}

/*
PatchEscalationChainByIDOK describes a response with status code 200, with default header values.

successful operation
*/
type PatchEscalationChainByIDOK struct {
	Payload *models.EscalationChain
}

func (o *PatchEscalationChainByIDOK) Error() string {
	return fmt.Sprintf("[PATCH /setting/alert/chains/{id}][%d] patchEscalationChainByIdOK  %+v", 200, o.Payload)
}
func (o *PatchEscalationChainByIDOK) GetPayload() *models.EscalationChain {
	return o.Payload
}

func (o *PatchEscalationChainByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.EscalationChain)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchEscalationChainByIDDefault creates a PatchEscalationChainByIDDefault with default headers values
func NewPatchEscalationChainByIDDefault(code int) *PatchEscalationChainByIDDefault {
	return &PatchEscalationChainByIDDefault{
		_statusCode: code,
	}
}

/*
PatchEscalationChainByIDDefault describes a response with status code -1, with default header values.

Error
*/
type PatchEscalationChainByIDDefault struct {
	_statusCode int

	Payload *models.ErrorResponse
}

// Code gets the status code for the patch escalation chain by Id default response
func (o *PatchEscalationChainByIDDefault) Code() int {
	return o._statusCode
}

func (o *PatchEscalationChainByIDDefault) Error() string {
	return fmt.Sprintf("[PATCH /setting/alert/chains/{id}][%d] patchEscalationChainById default  %+v", o._statusCode, o.Payload)
}
func (o *PatchEscalationChainByIDDefault) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchEscalationChainByIDDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
